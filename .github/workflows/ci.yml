name: Hash
on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@6c3b1c91e8873ae0c705b0709f957c7a6a5eaf10 # pin@main
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            raw.githubusercontent.com:443

      - name: Checkout repo
        uses: actions/checkout@v4 # pin@v4
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5 # pin@v5
        with:
          go-version-file: ./go.mod

      # Linting
      - name: Linting
        uses: golangci/golangci-lint-action@019c5ec61716b24359f9559aee2a71215b3895e3 # pin@master
        with:
          version: latest
          args: --config=./.github/.golangci.yml ./...
          only-new-issues: true

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.22', '1.21' ]
    steps:
      - uses: step-security/harden-runner@6c3b1c91e8873ae0c705b0709f957c7a6a5eaf10 # pin@main
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            proxy.golang.org:443
            storage.googleapis.com:443
            sum.golang.org:443

      - name: Checkout repo
        uses: actions/checkout@v4 # pin@v4
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5 # pin@v5
        with:
          go-version: ${{ matrix.go }}

      # Test
      - name: Run Tests
        run: cd .github && make test

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@6c3b1c91e8873ae0c705b0709f957c7a6a5eaf10 # pin@main
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.codecov.io:443
            api.github.com:443
            cli.codecov.io:443
            ea6ne4j2sb.execute-api.eu-central-1.amazonaws.com:443
            github.com:443
            objects.githubusercontent.com:443
            scanner.sonarcloud.io:443
            sonarcloud.io:443
            storage.googleapis.com:443

      - name: Checkout repo
        uses: actions/checkout@v4 # pin@v4
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5 # pin@v5
        with:
          go-version-file: ./go.mod

      # Coverage
      - name: Run coverage
        run: cd .github && make cover

      # Codecov
      - name: Codecov
        uses: codecov/codecov-action@8deb5f497d6af48d764f4983aea375e70bd09747 # pin@main
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: .github/coverage.out

      # Sonar
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@6bbd64e0cb2194e04addb429d669a9ee873eeeef # pin@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=bytemare_hash -Dsonar.organization=bytemare-github -Dsonar.go.coverage.reportPaths=.github/coverage.out -Dsonar.sources=. -Dsonar.test.exclusions=tests/** -Dsonar.tests=tests/ -Dsonar.verbose=true
